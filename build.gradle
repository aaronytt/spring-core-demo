plugins {
    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.ytt.springcoredemo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }

    // remove default logger
//    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    //    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

repositories {
    mavenLocal()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
    maven { url "https://repo.spring.io/libs-release" }
    mavenCentral()
    jcenter()
}

dependencies {

    compileOnly(
            'org.projectlombok:lombok'
    )

    annotationProcessor(
            'org.springframework.boot:spring-boot-configuration-processor',
            'org.projectlombok:lombok'
    )

//    implementation('org.mybatis:mybatis:3.5.2'){
////        exclude module: 'cglib' //by artifact name
////        exclude group: 'org.jmock' //by group
////        exclude group: 'org.unwanted', module: 'iAmBuggy' //by both name and group
//
//        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
//    }

//    implementation('org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.0',){
//        exclude group: 'org.mybatis', module: 'mybatis' //by both name and group
//    }
//
//    compile project(':mybatis-3-master')

    implementation(

            'org.springframework.boot:spring-boot-starter-logging',
            //            'org.springframework.boot:spring-boot-starter-log4j2',

            'org.springframework.boot:spring-boot-starter-jdbc',
            'com.zaxxer:HikariCP',
            'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.0',
            // https://mvnrepository.com/artifact/com.github.pagehelper/pagehelper-spring-boot-starter
            'com.github.pagehelper:pagehelper-spring-boot-starter:1.2.12',


            'org.springframework.boot:spring-boot-starter-validation',
            'javax.validation:validation-api',

            'org.springframework.boot:spring-boot-starter-aop',
            'javax.annotation:javax.annotation-api:1.3.2',

            'org.joda:joda-money:1.0.1',
            'org.joda:joda-convert:2.2.1',
            'org.jadira.usertype:usertype.core:7.0.0.CR1',

            'javax.persistence:javax.persistence-api',

            'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml',
            'com.fasterxml.jackson.dataformat:jackson-dataformat-xml',

            'com.google.code.gson:gson',

            'org.apache.commons:commons-lang3',

//            'org.springframework.boot:spring-boot-starter-web',


    )

    runtimeOnly(
            'mysql:mysql-connector-java',
//            'org.springframework.boot:spring-boot-starter-tomcat',
    )

    developmentOnly(
            'org.springframework.boot:spring-boot-devtools',
    )

    testCompile(
            'org.springframework.boot:spring-boot-starter-test',
            "junit:junit:4.12"
    )

}

// java编译的时候缺省状态下会因为中文字符而失败
[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

//指定编码格式
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
